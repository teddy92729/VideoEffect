#version 300 es
precision highp float;
in vec2 vTextureCoord;
in vec2 vPosition;
uniform sampler2D uTexture;
uniform sampler2D uOTexture;
uniform vec4 uInputSize;
uniform vec4 uOutputFrame;
out vec4 color;

//-------------------------------------------
#define HOOKED_pos      vTextureCoord
#define HOOKED_tex(pos) texture(uTexture, pos)
#define HOOKED_pt       uInputSize.zw
#define HOOKED_size       uInputSize.xy
#define HOOKED_texOff(offset) HOOKED_tex(HOOKED_pos+(offset)*HOOKED_pt)
#define MAIN_pos vPosition
#define MAIN_tex(pos) texture(uOTexture, pos)
//-------------------------------------------

#define go_0(x_off, y_off) (max((HOOKED_texOff(vec2(x_off, y_off))), 0.0))
#define go_1(x_off, y_off) (max(-(HOOKED_texOff(vec2(x_off, y_off))), 0.0))
vec4 hook() {
    vec4 result = mat4(-0.08796357f, 0.028130328f, 0.073414765f, -0.029320398f, -0.07826724f, 0.012752971f, 0.06304871f, 0.082551956f, -0.052348416f, 0.010077275f, 0.0803755f, 0.16395038f, -0.08238233f, -0.0012038432f, -0.1297045f, -0.1087021f) * go_0(-1.0f, -1.0f);
    result += mat4(0.044162463f, -0.019727755f, -0.05845153f, -0.23984948f, 0.08363732f, -0.06774037f, 0.0234879f, 0.02139741f, 0.0028723166f, -0.07549135f, 0.0744662f, 0.109019615f, 0.03763121f, -0.060664024f, -0.03823593f, -0.015655363f) * go_0(-1.0f, 0.0f);
    result += mat4(-0.026882887f, 0.124355234f, -0.005225512f, 0.053853527f, -0.004761375f, 0.07739831f, 0.007993726f, -0.024238527f, -0.035357814f, 0.022114292f, -0.026158875f, 0.047122046f, -0.021067293f, 0.041959677f, 0.008588816f, -0.006613815f) * go_0(-1.0f, 1.0f);
    result += mat4(-0.037601672f, 0.010898833f, 0.05053419f, -0.0118405875f, 0.052177202f, 0.013291429f, -0.20246609f, -0.07192325f, -0.05164381f, -0.011278074f, -0.12394048f, -0.037769064f, 0.24392918f, 0.03289724f, 0.018663784f, 0.04071627f) * go_0(0.0f, -1.0f);
    result += mat4(-0.17768572f, -0.003431817f, 0.024597375f, -0.067222916f, -0.15119793f, -0.049984362f, 0.0588867f, 0.20031504f, -0.028296817f, -0.17337173f, 0.02136566f, 0.07842319f, -0.10203611f, 0.02128208f, 0.20057699f, 0.026265312f) * go_0(0.0f, 0.0f);
    result += mat4(-0.018206367f, -0.36731398f, -0.07842714f, -0.08946319f, 0.05601789f, -0.13398123f, -0.09766525f, 0.0051633804f, -0.004821273f, -0.060362365f, -0.08751827f, -0.01924666f, -0.01642196f, -0.084792316f, -0.021546558f, -0.01531331f) * go_0(0.0f, 1.0f);
    result += mat4(-0.003315341f, 0.003464535f, 0.023609636f, -0.029517155f, 0.023121882f, -0.033598952f, 0.032658506f, 0.072380014f, 0.038630765f, -0.020992903f, -0.09003304f, 0.048244834f, 0.17752261f, -0.023978172f, 0.7178278f, 0.09461632f) * go_0(1.0f, -1.0f);
    result += mat4(0.010277829f, -0.0462686f, -0.024897251f, -0.02214524f, 0.1262903f, -0.15583614f, -0.50100106f, -0.04074772f, 0.0612536f, -0.17066137f, -0.15715116f, -0.020877155f, -0.062031068f, 0.4314311f, -0.008700501f, -0.030722365f) * go_0(1.0f, 0.0f);
    result += mat4(-0.12062004f, 0.055291675f, 0.041176047f, -0.034254536f, -0.04062085f, 0.14750236f, 0.100433215f, 0.024384778f, -0.02506444f, -0.0012329774f, 0.06715311f, 0.013158619f, -0.07343181f, 0.08929479f, 0.015891392f, 0.0014893904f) * go_0(1.0f, 1.0f);
    result += mat4(-0.00028356185f, 0.008408778f, 0.046833538f, -0.110735945f, 0.050230157f, -0.023995856f, -0.06471944f, -0.12666705f, 0.121487044f, -0.040447604f, -0.13425831f, -0.035763647f, 0.06327994f, 0.04542948f, 0.12984566f, 0.041735172f) * go_1(-1.0f, -1.0f);
    result += mat4(-0.09654193f, 0.055733874f, 0.14149562f, 0.20103204f, -0.04256184f, 0.041129943f, -0.0997907f, 0.030775042f, 0.017492702f, 0.053436417f, -0.13472094f, -0.037674613f, -0.09461306f, 0.07363193f, 0.025130237f, -0.020962669f) * go_1(-1.0f, 0.0f);
    result += mat4(0.003966979f, -0.077911004f, -0.025530541f, -0.08657802f, 0.047928706f, -0.12820454f, -0.034780253f, 0.070523396f, 0.0991259f, -0.07432318f, -0.035848588f, 0.026542934f, -0.005886989f, -0.048655648f, 0.014799456f, -0.033676937f) * go_1(-1.0f, 1.0f);
    result += mat4(0.0040423325f, 0.011639387f, 0.014709128f, -0.100935176f, -0.03094238f, -0.0058094636f, 0.1256023f, 0.086693585f, -0.00840243f, -0.02635784f, -0.2395783f, 0.0055595445f, -0.104565054f, 0.05285065f, 0.092289336f, 0.12696597f) * go_1(0.0f, -1.0f);
    result += mat4(-0.097862415f, 0.035469674f, -0.12026435f, -0.25865972f, 0.12508512f, -0.00648921f, -0.1848096f, -0.24143967f, -0.009432349f, -0.035211377f, -0.05589267f, -0.11565712f, 0.015937572f, 0.02717122f, -0.09954979f, -0.081140056f) * go_1(0.0f, 0.0f);
    result += mat4(-0.09073428f, 0.31426015f, 0.087145604f, -0.00073830306f, 0.013578701f, 0.032616604f, 0.038264107f, 0.07236385f, -0.012257218f, 0.040580798f, 0.08520396f, 0.004167174f, 0.02280993f, 0.113494344f, 0.027510444f, 0.029490784f) * go_1(0.0f, 1.0f);
    result += mat4(-0.02391937f, 0.0039571812f, -0.026116686f, -0.025334306f, 0.06904104f, 0.011511556f, -0.14147542f, 0.01224604f, 0.03788813f, -0.041387778f, -0.1523622f, 0.03650455f, 0.04693732f, 0.03091366f, 0.2839756f, 0.1779714f) * go_1(1.0f, -1.0f);
    result += mat4(-0.026292996f, 0.020397607f, 0.09354275f, 0.00044126343f, -0.047845f, 0.11368384f, 0.18426466f, 0.12002076f, -0.034070846f, 0.042704806f, -0.041553736f, 0.04446022f, -0.006331844f, 0.16227855f, 0.07832003f, -0.07068554f) * go_1(1.0f, 0.0f);
    result += mat4(-0.026658786f, -0.0079359505f, -0.04125044f, -0.10622727f, 0.06254047f, -0.36537018f, -0.10755624f, 0.011665703f, 0.025558028f, -0.087151f, -0.06987865f, 0.00023839885f, 0.03247968f, -0.053188834f, -0.004876301f, -0.06005079f) * go_1(1.0f, 1.0f);
    result += vec4(-0.012601902f, -0.0121468f, -0.027073797f, -0.0223602f);
    return result;
}

void main() {
    color = hook();
}