#version 300 es
precision highp float;
in vec2 vTextureCoord;
in vec2 vPosition;
uniform sampler2D uTexture;
uniform sampler2D uOTexture;
uniform vec4 uInputSize;
uniform vec4 uOutputFrame;
out vec4 color;

//-------------------------------------------
#define HOOKED_pos      vTextureCoord
#define HOOKED_tex(pos) texture(uTexture, pos)
#define HOOKED_pt       uInputSize.zw
#define HOOKED_size       uInputSize.xy
#define HOOKED_texOff(offset) HOOKED_tex(HOOKED_pos+(offset)*HOOKED_pt)
#define MAIN_pos vPosition
#define MAIN_tex(pos) texture(uOTexture, pos)
//-------------------------------------------

#define go_0(x_off, y_off) (max((HOOKED_texOff(vec2(x_off, y_off))), 0.0))
#define go_1(x_off, y_off) (max(-(HOOKED_texOff(vec2(x_off, y_off))), 0.0))
vec4 hook() {
    vec4 result = mat4(0.08631539f, 0.09499331f, 0.065609254f, 0.0f, -0.023760278f, -0.027293118f, -0.022839671f, 0.0f, -0.012447854f, -0.008565141f, -0.012041815f, 0.0f, -0.033292875f, -0.031266093f, -0.02874347f, 0.0f) * go_0(-1.0f, -1.0f);
    result += mat4(0.08709062f, 0.09760889f, 0.08988583f, 0.0f, -0.09099671f, -0.102120616f, -0.098076016f, 0.0f, 0.057814583f, 0.06999608f, 0.05961344f, 0.0f, 0.12246188f, 0.1319784f, 0.12254915f, 0.0f) * go_0(-1.0f, 0.0f);
    result += mat4(0.07694916f, 0.0822054f, 0.07549296f, 0.0f, -0.046808865f, -0.051509347f, -0.035890795f, 0.0f, 0.01599848f, 0.014677793f, 0.0086143715f, 0.0f, 0.033142705f, 0.0426565f, 0.035911378f, 0.0f) * go_0(-1.0f, 1.0f);
    result += mat4(-0.0008269902f, 0.0009082343f, 0.014101725f, 0.0f, 0.0006387551f, 0.005079344f, -0.013034868f, 0.0f, 0.013909732f, 0.011026747f, 0.012485332f, 0.0f, 0.027028518f, 0.022164145f, 0.03183532f, 0.0f) * go_0(0.0f, -1.0f);
    result += mat4(-0.33575395f, -0.36700967f, -0.34140685f, 0.0f, 0.35850254f, 0.37535715f, 0.34613726f, 0.0f, -0.12680013f, -0.1256115f, -0.112494245f, 0.0f, -0.061541136f, -0.059120018f, -0.06552594f, 0.0f) * go_0(0.0f, 0.0f);
    result += mat4(-0.047570463f, -0.050335366f, -0.04665491f, 0.0f, -0.110970475f, -0.12363716f, -0.11072252f, 0.0f, 0.041563414f, 0.059771337f, 0.045290247f, 0.0f, -0.17999935f, -0.19700716f, -0.17459513f, 0.0f) * go_0(0.0f, 1.0f);
    result += mat4(0.078488424f, 0.07483357f, 0.08347933f, 0.0f, -0.0063715233f, 0.00035415235f, -0.010886946f, 0.0f, 0.031237155f, 0.02512343f, 0.034399323f, 0.0f, -0.023146842f, -0.026732154f, -0.027644241f, 0.0f) * go_0(1.0f, -1.0f);
    result += mat4(-0.05906883f, -0.06784104f, -0.04506148f, 0.0f, -0.003939601f, -0.0011749315f, -0.006256036f, 0.0f, -0.1662408f, -0.16871658f, -0.16598499f, 0.0f, 0.051277652f, 0.04837499f, 0.05120855f, 0.0f) * go_0(1.0f, 0.0f);
    result += mat4(0.08158806f, 0.08674548f, 0.07437206f, 0.0f, -0.05765347f, -0.06196418f, -0.057311118f, 0.0f, 0.26747537f, 0.2668808f, 0.2389857f, 0.0f, -0.010376844f, -0.01690028f, -0.008414153f, 0.0f) * go_0(1.0f, 1.0f);
    result += mat4(0.030539425f, 0.02415435f, 0.039969034f, 0.0f, 0.006491679f, 0.014436586f, 0.005435709f, 0.0f, -0.0058292216f, -0.013982021f, -0.011243379f, 0.0f, 0.025942149f, 0.015361476f, 0.019134998f, 0.0f) * go_1(-1.0f, -1.0f);
    result += mat4(-0.06322247f, -0.07146787f, -0.06673042f, 0.0f, 0.028702464f, 0.039047733f, 0.039646607f, 0.0f, -0.072553575f, -0.08046175f, -0.07027197f, 0.0f, -0.1447189f, -0.1539398f, -0.1466465f, 0.0f) * go_1(-1.0f, 0.0f);
    result += mat4(-0.046430312f, -0.054549117f, -0.048076343f, 0.0f, 0.032971155f, 0.02980819f, 0.029172963f, 0.0f, -0.017612953f, -0.015100736f, -0.01202649f, 0.0f, -0.026717246f, -0.028401854f, -0.034548033f, 0.0f) * go_1(-1.0f, 1.0f);
    result += mat4(-0.0020459262f, -0.0008748501f, -0.012601956f, 0.0f, 0.0054226154f, 0.008867029f, 0.018921215f, 0.0f, -0.0021330053f, -0.0036601655f, -0.0022091097f, 0.0f, -0.08636891f, -0.10203159f, -0.09741449f, 0.0f) * go_1(0.0f, -1.0f);
    result += mat4(0.07306159f, 0.08245483f, 0.06548199f, 0.0f, -0.1933229f, -0.20326294f, -0.19189309f, 0.0f, 0.107496604f, 0.11584994f, 0.10907522f, 0.0f, 0.30877885f, 0.31297725f, 0.30890995f, 0.0f) * go_1(0.0f, 0.0f);
    result += mat4(0.03192904f, 0.035112645f, 0.033732817f, 0.0f, 0.074100636f, 0.08349646f, 0.06659352f, 0.0f, -0.1136165f, -0.12470947f, -0.11192198f, 0.0f, 0.14465587f, 0.16328491f, 0.13984151f, 0.0f) * go_1(0.0f, 1.0f);
    result += mat4(-0.05098033f, -0.053096622f, -0.05533725f, 0.0f, 0.0045651463f, -0.007682458f, 0.0026934785f, 0.0f, -0.021199327f, -0.016210148f, -0.030939564f, 0.0f, -0.031621892f, -0.046702545f, -0.02647333f, 0.0f) * go_1(1.0f, -1.0f);
    result += mat4(0.055801813f, 0.06430485f, 0.05052402f, 0.0f, 0.0241233f, 0.013879883f, 0.017344628f, 0.0f, 0.08707151f, 0.10031039f, 0.095042154f, 0.0f, -0.109053336f, -0.11414017f, -0.111838564f, 0.0f) * go_1(1.0f, 0.0f);
    result += mat4(0.030582374f, 0.03604719f, 0.040417343f, 0.0f, 0.038665913f, 0.036998056f, 0.030004544f, 0.0f, 0.09209076f, 0.10010001f, 0.08389406f, 0.0f, -0.014655714f, -0.0074866647f, -0.012227013f, 0.0f) * go_1(1.0f, 1.0f);
    result += vec4(-0.008303841f, -0.008251826f, -0.0069884053f, 0.0f);
    return result + MAIN_tex(MAIN_pos);
}

void main() {
    color = hook();
}